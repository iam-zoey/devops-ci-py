name: Build and Test with JFrog CLI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: py-example # dockerhub image name 
      IMAGE_VERSION: 0.1 # dockerhub image tag
      SONAR_PROJECT_KEY: python-app
      BASE_IMAGE_VERSION: 2.7
      COMMAND: python3 src/app.py
      SONAR_PROJECT_NAME: python-app
      # TARGET_ARTIFACT: <your artifactory>.jfrog.io


    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      # Install Python and dependencies from JFrog Artifactory
      - name: Install Python and dependencies
        run: |
          pip3 install --upgrade pip
          pip3 install -r requirements.txt 

      # Run Snyk to check for vulnerabilities
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      # ========================================
      # # Run SonarQube analysis
      # - name: Run SonarQube analysis
      #   uses: sonarsource/sonarqube-scan-action@master
      #   with:
      #     args: >
      #       -Dsonar.projectKey=${{env.SONAR_PROJECT_NAME}}
      #       -Dsonar.sources=.
      #       -Dsonar.host.url=${{ secrets.SONAR_URL }}
      #       -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        # uses: sonarsource/sonarqube-quality-gate-action@master
        #     timeout-minutes: 5
        #     env:
        #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Run unit tests
      - name: Run unit tests
        run: |
          python3 -m unittest discover -s tests

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Docker login
      - name: Docker Hub Login 
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_ID }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Build and Push to DockerHub
      - name: Build and Push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_ID }}/${{env.IMAGE_NAME}}:${{env.IMAGE_VERSION}}
          build-args: |
            BASE_IMAGE_VERSION=${{env.BASE_IMAGE_VERSION}}
            FILE_TO_RUN=${{env.FILE_TO_RUN}}
            
      


      